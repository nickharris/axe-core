version: 2.1

defaults: &defaults
  working_directory: ~/axe-core

unix_box: &unix_box
  docker:
    - image: circleci/node:10-browsers

win_box: &win_box
  executor:
    name: win/vs2019
    shell: bash.exe

orbs:
  win: circleci/windows@1.0.0

set_npm_auth: &set_npm_auth
  run: npm config set "//registry.npmjs.org/:_authToken" $NPM_AUTH

restore_dependency_cache_unix: &restore_dependency_cache_unix
  restore_cache:
    keys:
      - v8-cache-unix-{{ checksum "package-lock.json" }}
      - v8-cache-unix-

restore_dependency_cache_win: &restore_dependency_cache_win
  restore_cache:
    keys:
      - v8-cache-win-{{ checksum "package-lock.json" }}
      - v8-cache-win-

jobs:
  # Fetch and cache dependencies.
  dependencies_unix:
    <<: *defaults
    <<: *unix_box
    steps:
      - checkout
      - <<: *set_npm_auth
      - <<: *restore_dependency_cache_unix
      - run: npm ci
      - save_cache:
          key: v8-cache-unix-{{ checksum "package-lock.json" }}
          paths:
            - node_modules
  dependencies_win:
    <<: *defaults
    <<: *win_box
    steps:
      - checkout
      - <<: *set_npm_auth
      - <<: *restore_dependency_cache_win
      - run: npm ci
      - save_cache:
          key: v8-cache-win-{{ checksum "package-lock.json" }}
          paths:
            - node_modules

  # Run ESLINT
  lint:
    <<: *defaults
    <<: *unix_box
    steps:
      - checkout
      - <<: *restore_dependency_cache_unix
      - run: npm run eslint

  # Run the test suite.
  test_unix:
    <<: *defaults
    <<: *unix_box
    steps:
      - checkout
      - <<: *restore_dependency_cache_unix
      - run: npm run test
  
  # Run the test suite in IE in windows
  test_win:
    <<: *defaults
    <<: *win_box
    steps:
      - checkout
      # npm i or restore cache
      - <<: *restore_dependency_cache_win
      # install selenium 
      - run: |
          choco install selenium-ie-driver --version 3.141.5
          export PATH=/c/tools/selenium:$PATH
          echo $PATH
      # build `axe`
      - run: npm run build
      # get fixtures ready for running tests
      - run: npx grunt testconfig	
      - run: npx grunt fixture	
      # run IE webdriver tests
      - run: npx grunt connect test-webdriver:ie
      # test examples
      # Note: Jasmine karma-chrome-launcher requires chrome browser
      - run: choco install googlechrome --ignore-checksums
      - run: npm run test:examples

  # Run examples under `doc/examples`
  test_examples:
    <<: *defaults
    <<: *unix_box
    steps:
      - checkout
      - <<: *restore_dependency_cache_unix
      - run: npm run test:examples

  # Test locale files
  test_locales:
    <<: *defaults
    <<: *unix_box
    steps:
      - checkout
      - <<: *restore_dependency_cache_unix
      - run: npm run build
      - run: npm run test:locales

  # Test api docs can be built
  build_api_docs:
    <<: *defaults
    <<: *unix_box
    steps:
      - checkout
      - <<: *restore_dependency_cache_unix
      - run: npm run api-docs

  # Test newest axe-core version rule help docs are active (only on
  # master prs)
  test_rule_help_version:
    <<: *defaults
    <<: *unix_box
    steps:
      - checkout
      - <<: *restore_dependency_cache_unix
      - run: npm run test:rule-help-version

  # Release a "next" version
  next_release:
    <<: *defaults
    <<: *unix_box
    steps:
      - checkout
      - <<: *set_npm_auth
      - <<: *restore_dependency_cache_unix
      - run: npm run next-release
      - run: npm publish --tag=next

  # Release a "production" version
  release:
    <<: *defaults
    <<: *unix_box
    steps:
      - checkout
      - <<: *set_npm_auth
      - <<: *restore_dependency_cache_unix
      - run: npm run build
      - run: npm run sri-validate
      - run: npm publish

  # Create a GitHub release.
  github_release:
    docker:
      - image: circleci/golang:1.8
    steps:
      - checkout
      - run: go get gopkg.in/aktau/github-release.v0
      - run:
          name: Download and run GitHub release script
          command: |
            curl https://raw.githubusercontent.com/dequelabs/attest-release-scripts/develop/src/node-github-release.sh -s -o ./node-github-release.sh
            chmod +x ./node-github-release.sh
            ./node-github-release.sh

workflows:
  version: 2
  build:
    jobs:
      # install deps
      - dependencies_unix
      - dependencies_win
      # Run linting
      - lint:
          requires:
            - dependencies_unix
      # Run tests on all commits, but after installing dependencies
      - test_unix:
          requires:
            - dependencies_unix
            - lint
      # Run IE/ Windows test on all commits 
      - test_win:
          requires:
            - dependencies_win
      - test_examples:
          requires:
            - test_unix
      - test_locales:
          requires:
            - test_unix
      - build_api_docs:
          requires:
            - test_unix
      - test_rule_help_version:
          requires:
            - test_unix
      # Hold for approval
      - hold:
          type: approval
          requires:
            - test_unix
            - test_win
            - test_examples
            - test_locales
            - build_api_docs
            - test_rule_help_version
          filters:
            branches:
              only:
                - master
      # Run a next release on "develop" commits, but only after the tests pass and dependencies are installed
      - next_release:
          requires:
            - dependencies_unix
            - test_unix
            - test_examples
            - test_locales
            - build_api_docs
          filters:
            branches:
              only: develop
      # Run a production release on "master" commits, but only after the tests pass and dependencies are installed
      - release:
          requires:
            - dependencies_unix
            - test_unix
            - test_examples
            - test_locales
            - build_api_docs
            - test_rule_help_version
            - hold
          filters:
            branches:
              only: master
      - github_release:
          requires:
            - release